# Generated by Django 4.1 on 2022-08-20 11:36

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import hospital.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('desc', models.TextField()),
                ('logo_img', models.ImageField(upload_to='images', validators=[hospital.models.check_image])),
                ('img', models.ImageField(upload_to='images', validators=[hospital.models.check_image])),
                ('startDay', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], default='monday', max_length=10)),
                ('endDay', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], default='friday', max_length=10)),
                ('startTime_Schedule', models.TimeField(blank=True, default=datetime.datetime.now)),
                ('endTime_Schedule', models.TimeField(blank=True, default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='office_admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_number', models.CharField(max_length=14, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(blank=True, default='', max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('address', models.TextField(max_length=255)),
                ('birth_date', models.DateField()),
                ('profile_complete', models.BooleanField(default=False)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], default='male', max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hospital.person')),
                ('img', models.ImageField(upload_to='images', validators=[hospital.models.check_image])),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.department')),
            ],
            bases=('hospital.person',),
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hospital.person')),
                ('durgs', models.TextField(max_length=4000, null=True, verbose_name='Durgs Taken')),
                ('comment', models.TextField(max_length=4000, null=True)),
            ],
            bases=('hospital.person',),
        ),
        migrations.CreateModel(
            name='reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('date_now', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.patient')),
            ],
            options={
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('issued_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.office_admin')),
                ('patient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.patient')),
            ],
            options={
                'ordering': ('-issue_date',),
            },
        ),
        migrations.CreateModel(
            name='medical_record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis', models.TextField(max_length=4000)),
                ('recommended_medications', models.TextField(max_length=4000)),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservation_medical_records', to='hospital.reservation', unique=True)),
                ('added_doctor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_medical_records', to='hospital.doctor')),
                ('patient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_medical_records', to='hospital.patient')),
            ],
            options={
                'ordering': ('-added_on',),
            },
        ),
        migrations.AddConstraint(
            model_name='reservation',
            constraint=models.UniqueConstraint(fields=('date', 'doctor'), name='unique_reservation'),
        ),
    ]
